/**
 * Autogenerated by Thrift Compiler (0.16.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package hust.software.elon.safety.people.domain;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.16.0)", date = "2022-04-23")
public class SendPeopleQueueRequest implements org.apache.thrift.TBase<SendPeopleQueueRequest, SendPeopleQueueRequest._Fields>, java.io.Serializable, Cloneable, Comparable<SendPeopleQueueRequest> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SendPeopleQueueRequest");

  private static final org.apache.thrift.protocol.TField OBJECT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("objectId", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField QUEUE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("queueId", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField OBJECT_DATA_JSON_FIELD_DESC = new org.apache.thrift.protocol.TField("objectDataJson", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField VIRTUAL_QUEUE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("virtualQueueId", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField CREATE_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("createType", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField REASON_FIELD_DESC = new org.apache.thrift.protocol.TField("reason", org.apache.thrift.protocol.TType.STRING, (short)6);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SendPeopleQueueRequestStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SendPeopleQueueRequestTupleSchemeFactory();

  public long objectId; // required
  public long queueId; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String objectDataJson; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String virtualQueueId; // required
  /**
   * 
   * @see CreateType
   */
  public @org.apache.thrift.annotation.Nullable CreateType createType; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String reason; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    OBJECT_ID((short)1, "objectId"),
    QUEUE_ID((short)2, "queueId"),
    OBJECT_DATA_JSON((short)3, "objectDataJson"),
    VIRTUAL_QUEUE_ID((short)4, "virtualQueueId"),
    /**
     * 
     * @see CreateType
     */
    CREATE_TYPE((short)5, "createType"),
    REASON((short)6, "reason");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // OBJECT_ID
          return OBJECT_ID;
        case 2: // QUEUE_ID
          return QUEUE_ID;
        case 3: // OBJECT_DATA_JSON
          return OBJECT_DATA_JSON;
        case 4: // VIRTUAL_QUEUE_ID
          return VIRTUAL_QUEUE_ID;
        case 5: // CREATE_TYPE
          return CREATE_TYPE;
        case 6: // REASON
          return REASON;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __OBJECTID_ISSET_ID = 0;
  private static final int __QUEUEID_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.OBJECT_ID, new org.apache.thrift.meta_data.FieldMetaData("objectId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.QUEUE_ID, new org.apache.thrift.meta_data.FieldMetaData("queueId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.OBJECT_DATA_JSON, new org.apache.thrift.meta_data.FieldMetaData("objectDataJson", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VIRTUAL_QUEUE_ID, new org.apache.thrift.meta_data.FieldMetaData("virtualQueueId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_TYPE, new org.apache.thrift.meta_data.FieldMetaData("createType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, CreateType.class)));
    tmpMap.put(_Fields.REASON, new org.apache.thrift.meta_data.FieldMetaData("reason", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SendPeopleQueueRequest.class, metaDataMap);
  }

  public SendPeopleQueueRequest() {
  }

  public SendPeopleQueueRequest(
    long objectId,
    long queueId,
    java.lang.String objectDataJson,
    java.lang.String virtualQueueId,
    CreateType createType,
    java.lang.String reason)
  {
    this();
    this.objectId = objectId;
    setObjectIdIsSet(true);
    this.queueId = queueId;
    setQueueIdIsSet(true);
    this.objectDataJson = objectDataJson;
    this.virtualQueueId = virtualQueueId;
    this.createType = createType;
    this.reason = reason;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SendPeopleQueueRequest(SendPeopleQueueRequest other) {
    __isset_bitfield = other.__isset_bitfield;
    this.objectId = other.objectId;
    this.queueId = other.queueId;
    if (other.isSetObjectDataJson()) {
      this.objectDataJson = other.objectDataJson;
    }
    if (other.isSetVirtualQueueId()) {
      this.virtualQueueId = other.virtualQueueId;
    }
    if (other.isSetCreateType()) {
      this.createType = other.createType;
    }
    if (other.isSetReason()) {
      this.reason = other.reason;
    }
  }

  public SendPeopleQueueRequest deepCopy() {
    return new SendPeopleQueueRequest(this);
  }

  @Override
  public void clear() {
    setObjectIdIsSet(false);
    this.objectId = 0;
    setQueueIdIsSet(false);
    this.queueId = 0;
    this.objectDataJson = null;
    this.virtualQueueId = null;
    this.createType = null;
    this.reason = null;
  }

  public long getObjectId() {
    return this.objectId;
  }

  public SendPeopleQueueRequest setObjectId(long objectId) {
    this.objectId = objectId;
    setObjectIdIsSet(true);
    return this;
  }

  public void unsetObjectId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __OBJECTID_ISSET_ID);
  }

  /** Returns true if field objectId is set (has been assigned a value) and false otherwise */
  public boolean isSetObjectId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __OBJECTID_ISSET_ID);
  }

  public void setObjectIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __OBJECTID_ISSET_ID, value);
  }

  public long getQueueId() {
    return this.queueId;
  }

  public SendPeopleQueueRequest setQueueId(long queueId) {
    this.queueId = queueId;
    setQueueIdIsSet(true);
    return this;
  }

  public void unsetQueueId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __QUEUEID_ISSET_ID);
  }

  /** Returns true if field queueId is set (has been assigned a value) and false otherwise */
  public boolean isSetQueueId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __QUEUEID_ISSET_ID);
  }

  public void setQueueIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __QUEUEID_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getObjectDataJson() {
    return this.objectDataJson;
  }

  public SendPeopleQueueRequest setObjectDataJson(@org.apache.thrift.annotation.Nullable java.lang.String objectDataJson) {
    this.objectDataJson = objectDataJson;
    return this;
  }

  public void unsetObjectDataJson() {
    this.objectDataJson = null;
  }

  /** Returns true if field objectDataJson is set (has been assigned a value) and false otherwise */
  public boolean isSetObjectDataJson() {
    return this.objectDataJson != null;
  }

  public void setObjectDataJsonIsSet(boolean value) {
    if (!value) {
      this.objectDataJson = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getVirtualQueueId() {
    return this.virtualQueueId;
  }

  public SendPeopleQueueRequest setVirtualQueueId(@org.apache.thrift.annotation.Nullable java.lang.String virtualQueueId) {
    this.virtualQueueId = virtualQueueId;
    return this;
  }

  public void unsetVirtualQueueId() {
    this.virtualQueueId = null;
  }

  /** Returns true if field virtualQueueId is set (has been assigned a value) and false otherwise */
  public boolean isSetVirtualQueueId() {
    return this.virtualQueueId != null;
  }

  public void setVirtualQueueIdIsSet(boolean value) {
    if (!value) {
      this.virtualQueueId = null;
    }
  }

  /**
   * 
   * @see CreateType
   */
  @org.apache.thrift.annotation.Nullable
  public CreateType getCreateType() {
    return this.createType;
  }

  /**
   * 
   * @see CreateType
   */
  public SendPeopleQueueRequest setCreateType(@org.apache.thrift.annotation.Nullable CreateType createType) {
    this.createType = createType;
    return this;
  }

  public void unsetCreateType() {
    this.createType = null;
  }

  /** Returns true if field createType is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateType() {
    return this.createType != null;
  }

  public void setCreateTypeIsSet(boolean value) {
    if (!value) {
      this.createType = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getReason() {
    return this.reason;
  }

  public SendPeopleQueueRequest setReason(@org.apache.thrift.annotation.Nullable java.lang.String reason) {
    this.reason = reason;
    return this;
  }

  public void unsetReason() {
    this.reason = null;
  }

  /** Returns true if field reason is set (has been assigned a value) and false otherwise */
  public boolean isSetReason() {
    return this.reason != null;
  }

  public void setReasonIsSet(boolean value) {
    if (!value) {
      this.reason = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case OBJECT_ID:
      if (value == null) {
        unsetObjectId();
      } else {
        setObjectId((java.lang.Long)value);
      }
      break;

    case QUEUE_ID:
      if (value == null) {
        unsetQueueId();
      } else {
        setQueueId((java.lang.Long)value);
      }
      break;

    case OBJECT_DATA_JSON:
      if (value == null) {
        unsetObjectDataJson();
      } else {
        setObjectDataJson((java.lang.String)value);
      }
      break;

    case VIRTUAL_QUEUE_ID:
      if (value == null) {
        unsetVirtualQueueId();
      } else {
        setVirtualQueueId((java.lang.String)value);
      }
      break;

    case CREATE_TYPE:
      if (value == null) {
        unsetCreateType();
      } else {
        setCreateType((CreateType)value);
      }
      break;

    case REASON:
      if (value == null) {
        unsetReason();
      } else {
        setReason((java.lang.String)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case OBJECT_ID:
      return getObjectId();

    case QUEUE_ID:
      return getQueueId();

    case OBJECT_DATA_JSON:
      return getObjectDataJson();

    case VIRTUAL_QUEUE_ID:
      return getVirtualQueueId();

    case CREATE_TYPE:
      return getCreateType();

    case REASON:
      return getReason();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case OBJECT_ID:
      return isSetObjectId();
    case QUEUE_ID:
      return isSetQueueId();
    case OBJECT_DATA_JSON:
      return isSetObjectDataJson();
    case VIRTUAL_QUEUE_ID:
      return isSetVirtualQueueId();
    case CREATE_TYPE:
      return isSetCreateType();
    case REASON:
      return isSetReason();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof SendPeopleQueueRequest)
      return this.equals((SendPeopleQueueRequest)that);
    return false;
  }

  public boolean equals(SendPeopleQueueRequest that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_objectId = true;
    boolean that_present_objectId = true;
    if (this_present_objectId || that_present_objectId) {
      if (!(this_present_objectId && that_present_objectId))
        return false;
      if (this.objectId != that.objectId)
        return false;
    }

    boolean this_present_queueId = true;
    boolean that_present_queueId = true;
    if (this_present_queueId || that_present_queueId) {
      if (!(this_present_queueId && that_present_queueId))
        return false;
      if (this.queueId != that.queueId)
        return false;
    }

    boolean this_present_objectDataJson = true && this.isSetObjectDataJson();
    boolean that_present_objectDataJson = true && that.isSetObjectDataJson();
    if (this_present_objectDataJson || that_present_objectDataJson) {
      if (!(this_present_objectDataJson && that_present_objectDataJson))
        return false;
      if (!this.objectDataJson.equals(that.objectDataJson))
        return false;
    }

    boolean this_present_virtualQueueId = true && this.isSetVirtualQueueId();
    boolean that_present_virtualQueueId = true && that.isSetVirtualQueueId();
    if (this_present_virtualQueueId || that_present_virtualQueueId) {
      if (!(this_present_virtualQueueId && that_present_virtualQueueId))
        return false;
      if (!this.virtualQueueId.equals(that.virtualQueueId))
        return false;
    }

    boolean this_present_createType = true && this.isSetCreateType();
    boolean that_present_createType = true && that.isSetCreateType();
    if (this_present_createType || that_present_createType) {
      if (!(this_present_createType && that_present_createType))
        return false;
      if (!this.createType.equals(that.createType))
        return false;
    }

    boolean this_present_reason = true && this.isSetReason();
    boolean that_present_reason = true && that.isSetReason();
    if (this_present_reason || that_present_reason) {
      if (!(this_present_reason && that_present_reason))
        return false;
      if (!this.reason.equals(that.reason))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(objectId);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(queueId);

    hashCode = hashCode * 8191 + ((isSetObjectDataJson()) ? 131071 : 524287);
    if (isSetObjectDataJson())
      hashCode = hashCode * 8191 + objectDataJson.hashCode();

    hashCode = hashCode * 8191 + ((isSetVirtualQueueId()) ? 131071 : 524287);
    if (isSetVirtualQueueId())
      hashCode = hashCode * 8191 + virtualQueueId.hashCode();

    hashCode = hashCode * 8191 + ((isSetCreateType()) ? 131071 : 524287);
    if (isSetCreateType())
      hashCode = hashCode * 8191 + createType.getValue();

    hashCode = hashCode * 8191 + ((isSetReason()) ? 131071 : 524287);
    if (isSetReason())
      hashCode = hashCode * 8191 + reason.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(SendPeopleQueueRequest other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetObjectId(), other.isSetObjectId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetObjectId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.objectId, other.objectId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetQueueId(), other.isSetQueueId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQueueId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.queueId, other.queueId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetObjectDataJson(), other.isSetObjectDataJson());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetObjectDataJson()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.objectDataJson, other.objectDataJson);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetVirtualQueueId(), other.isSetVirtualQueueId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVirtualQueueId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.virtualQueueId, other.virtualQueueId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetCreateType(), other.isSetCreateType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createType, other.createType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetReason(), other.isSetReason());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReason()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reason, other.reason);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("SendPeopleQueueRequest(");
    boolean first = true;

    sb.append("objectId:");
    sb.append(this.objectId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("queueId:");
    sb.append(this.queueId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("objectDataJson:");
    if (this.objectDataJson == null) {
      sb.append("null");
    } else {
      sb.append(this.objectDataJson);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("virtualQueueId:");
    if (this.virtualQueueId == null) {
      sb.append("null");
    } else {
      sb.append(this.virtualQueueId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("createType:");
    if (this.createType == null) {
      sb.append("null");
    } else {
      sb.append(this.createType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("reason:");
    if (this.reason == null) {
      sb.append("null");
    } else {
      sb.append(this.reason);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // alas, we cannot check 'objectId' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'queueId' because it's a primitive and you chose the non-beans generator.
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SendPeopleQueueRequestStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SendPeopleQueueRequestStandardScheme getScheme() {
      return new SendPeopleQueueRequestStandardScheme();
    }
  }

  private static class SendPeopleQueueRequestStandardScheme extends org.apache.thrift.scheme.StandardScheme<SendPeopleQueueRequest> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SendPeopleQueueRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // OBJECT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.objectId = iprot.readI64();
              struct.setObjectIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // QUEUE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.queueId = iprot.readI64();
              struct.setQueueIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // OBJECT_DATA_JSON
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.objectDataJson = iprot.readString();
              struct.setObjectDataJsonIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // VIRTUAL_QUEUE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.virtualQueueId = iprot.readString();
              struct.setVirtualQueueIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // CREATE_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.createType = hust.software.elon.safety.people.domain.CreateType.findByValue(iprot.readI32());
              struct.setCreateTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // REASON
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.reason = iprot.readString();
              struct.setReasonIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetObjectId()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'objectId' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetQueueId()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'queueId' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SendPeopleQueueRequest struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(OBJECT_ID_FIELD_DESC);
      oprot.writeI64(struct.objectId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(QUEUE_ID_FIELD_DESC);
      oprot.writeI64(struct.queueId);
      oprot.writeFieldEnd();
      if (struct.objectDataJson != null) {
        oprot.writeFieldBegin(OBJECT_DATA_JSON_FIELD_DESC);
        oprot.writeString(struct.objectDataJson);
        oprot.writeFieldEnd();
      }
      if (struct.virtualQueueId != null) {
        oprot.writeFieldBegin(VIRTUAL_QUEUE_ID_FIELD_DESC);
        oprot.writeString(struct.virtualQueueId);
        oprot.writeFieldEnd();
      }
      if (struct.createType != null) {
        oprot.writeFieldBegin(CREATE_TYPE_FIELD_DESC);
        oprot.writeI32(struct.createType.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.reason != null) {
        oprot.writeFieldBegin(REASON_FIELD_DESC);
        oprot.writeString(struct.reason);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SendPeopleQueueRequestTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SendPeopleQueueRequestTupleScheme getScheme() {
      return new SendPeopleQueueRequestTupleScheme();
    }
  }

  private static class SendPeopleQueueRequestTupleScheme extends org.apache.thrift.scheme.TupleScheme<SendPeopleQueueRequest> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SendPeopleQueueRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeI64(struct.objectId);
      oprot.writeI64(struct.queueId);
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetObjectDataJson()) {
        optionals.set(0);
      }
      if (struct.isSetVirtualQueueId()) {
        optionals.set(1);
      }
      if (struct.isSetCreateType()) {
        optionals.set(2);
      }
      if (struct.isSetReason()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetObjectDataJson()) {
        oprot.writeString(struct.objectDataJson);
      }
      if (struct.isSetVirtualQueueId()) {
        oprot.writeString(struct.virtualQueueId);
      }
      if (struct.isSetCreateType()) {
        oprot.writeI32(struct.createType.getValue());
      }
      if (struct.isSetReason()) {
        oprot.writeString(struct.reason);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SendPeopleQueueRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.objectId = iprot.readI64();
      struct.setObjectIdIsSet(true);
      struct.queueId = iprot.readI64();
      struct.setQueueIdIsSet(true);
      java.util.BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.objectDataJson = iprot.readString();
        struct.setObjectDataJsonIsSet(true);
      }
      if (incoming.get(1)) {
        struct.virtualQueueId = iprot.readString();
        struct.setVirtualQueueIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.createType = hust.software.elon.safety.people.domain.CreateType.findByValue(iprot.readI32());
        struct.setCreateTypeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.reason = iprot.readString();
        struct.setReasonIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

