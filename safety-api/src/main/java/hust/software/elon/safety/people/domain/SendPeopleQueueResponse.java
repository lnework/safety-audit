/**
 * Autogenerated by Thrift Compiler (0.16.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package hust.software.elon.safety.people.domain;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.16.0)", date = "2022-05-11")
public class SendPeopleQueueResponse implements org.apache.thrift.TBase<SendPeopleQueueResponse, SendPeopleQueueResponse._Fields>, java.io.Serializable, Cloneable, Comparable<SendPeopleQueueResponse> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SendPeopleQueueResponse");

  private static final org.apache.thrift.protocol.TField TASK_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("taskId", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField OBJECT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("objectId", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField QUEUE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("queueId", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField CREATE_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("createType", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField STATUS_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("statusCode", org.apache.thrift.protocol.TType.I32, (short)255);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SendPeopleQueueResponseStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SendPeopleQueueResponseTupleSchemeFactory();

  public long taskId; // required
  public long objectId; // required
  public long queueId; // required
  /**
   * 
   * @see CreateType
   */
  public @org.apache.thrift.annotation.Nullable CreateType createType; // required
  /**
   * 
   * @see hust.software.elon.safety.common.domain.StatusCode
   */
  public @org.apache.thrift.annotation.Nullable hust.software.elon.safety.common.domain.StatusCode statusCode; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    TASK_ID((short)1, "taskId"),
    OBJECT_ID((short)2, "objectId"),
    QUEUE_ID((short)3, "queueId"),
    /**
     * 
     * @see CreateType
     */
    CREATE_TYPE((short)4, "createType"),
    /**
     * 
     * @see hust.software.elon.safety.common.domain.StatusCode
     */
    STATUS_CODE((short)255, "statusCode");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // TASK_ID
          return TASK_ID;
        case 2: // OBJECT_ID
          return OBJECT_ID;
        case 3: // QUEUE_ID
          return QUEUE_ID;
        case 4: // CREATE_TYPE
          return CREATE_TYPE;
        case 255: // STATUS_CODE
          return STATUS_CODE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __TASKID_ISSET_ID = 0;
  private static final int __OBJECTID_ISSET_ID = 1;
  private static final int __QUEUEID_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.STATUS_CODE};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.TASK_ID, new org.apache.thrift.meta_data.FieldMetaData("taskId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.OBJECT_ID, new org.apache.thrift.meta_data.FieldMetaData("objectId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.QUEUE_ID, new org.apache.thrift.meta_data.FieldMetaData("queueId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATE_TYPE, new org.apache.thrift.meta_data.FieldMetaData("createType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, CreateType.class)));
    tmpMap.put(_Fields.STATUS_CODE, new org.apache.thrift.meta_data.FieldMetaData("statusCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, hust.software.elon.safety.common.domain.StatusCode.class)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SendPeopleQueueResponse.class, metaDataMap);
  }

  public SendPeopleQueueResponse() {
    this.statusCode = hust.software.elon.safety.common.domain.StatusCode.SUCCESS;

  }

  public SendPeopleQueueResponse(
    long taskId,
    long objectId,
    long queueId,
    CreateType createType)
  {
    this();
    this.taskId = taskId;
    setTaskIdIsSet(true);
    this.objectId = objectId;
    setObjectIdIsSet(true);
    this.queueId = queueId;
    setQueueIdIsSet(true);
    this.createType = createType;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SendPeopleQueueResponse(SendPeopleQueueResponse other) {
    __isset_bitfield = other.__isset_bitfield;
    this.taskId = other.taskId;
    this.objectId = other.objectId;
    this.queueId = other.queueId;
    if (other.isSetCreateType()) {
      this.createType = other.createType;
    }
    if (other.isSetStatusCode()) {
      this.statusCode = other.statusCode;
    }
  }

  public SendPeopleQueueResponse deepCopy() {
    return new SendPeopleQueueResponse(this);
  }

  @Override
  public void clear() {
    setTaskIdIsSet(false);
    this.taskId = 0;
    setObjectIdIsSet(false);
    this.objectId = 0;
    setQueueIdIsSet(false);
    this.queueId = 0;
    this.createType = null;
    this.statusCode = hust.software.elon.safety.common.domain.StatusCode.SUCCESS;

  }

  public long getTaskId() {
    return this.taskId;
  }

  public SendPeopleQueueResponse setTaskId(long taskId) {
    this.taskId = taskId;
    setTaskIdIsSet(true);
    return this;
  }

  public void unsetTaskId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __TASKID_ISSET_ID);
  }

  /** Returns true if field taskId is set (has been assigned a value) and false otherwise */
  public boolean isSetTaskId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __TASKID_ISSET_ID);
  }

  public void setTaskIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __TASKID_ISSET_ID, value);
  }

  public long getObjectId() {
    return this.objectId;
  }

  public SendPeopleQueueResponse setObjectId(long objectId) {
    this.objectId = objectId;
    setObjectIdIsSet(true);
    return this;
  }

  public void unsetObjectId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __OBJECTID_ISSET_ID);
  }

  /** Returns true if field objectId is set (has been assigned a value) and false otherwise */
  public boolean isSetObjectId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __OBJECTID_ISSET_ID);
  }

  public void setObjectIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __OBJECTID_ISSET_ID, value);
  }

  public long getQueueId() {
    return this.queueId;
  }

  public SendPeopleQueueResponse setQueueId(long queueId) {
    this.queueId = queueId;
    setQueueIdIsSet(true);
    return this;
  }

  public void unsetQueueId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __QUEUEID_ISSET_ID);
  }

  /** Returns true if field queueId is set (has been assigned a value) and false otherwise */
  public boolean isSetQueueId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __QUEUEID_ISSET_ID);
  }

  public void setQueueIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __QUEUEID_ISSET_ID, value);
  }

  /**
   * 
   * @see CreateType
   */
  @org.apache.thrift.annotation.Nullable
  public CreateType getCreateType() {
    return this.createType;
  }

  /**
   * 
   * @see CreateType
   */
  public SendPeopleQueueResponse setCreateType(@org.apache.thrift.annotation.Nullable CreateType createType) {
    this.createType = createType;
    return this;
  }

  public void unsetCreateType() {
    this.createType = null;
  }

  /** Returns true if field createType is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateType() {
    return this.createType != null;
  }

  public void setCreateTypeIsSet(boolean value) {
    if (!value) {
      this.createType = null;
    }
  }

  /**
   * 
   * @see hust.software.elon.safety.common.domain.StatusCode
   */
  @org.apache.thrift.annotation.Nullable
  public hust.software.elon.safety.common.domain.StatusCode getStatusCode() {
    return this.statusCode;
  }

  /**
   * 
   * @see hust.software.elon.safety.common.domain.StatusCode
   */
  public SendPeopleQueueResponse setStatusCode(@org.apache.thrift.annotation.Nullable hust.software.elon.safety.common.domain.StatusCode statusCode) {
    this.statusCode = statusCode;
    return this;
  }

  public void unsetStatusCode() {
    this.statusCode = null;
  }

  /** Returns true if field statusCode is set (has been assigned a value) and false otherwise */
  public boolean isSetStatusCode() {
    return this.statusCode != null;
  }

  public void setStatusCodeIsSet(boolean value) {
    if (!value) {
      this.statusCode = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case TASK_ID:
      if (value == null) {
        unsetTaskId();
      } else {
        setTaskId((java.lang.Long)value);
      }
      break;

    case OBJECT_ID:
      if (value == null) {
        unsetObjectId();
      } else {
        setObjectId((java.lang.Long)value);
      }
      break;

    case QUEUE_ID:
      if (value == null) {
        unsetQueueId();
      } else {
        setQueueId((java.lang.Long)value);
      }
      break;

    case CREATE_TYPE:
      if (value == null) {
        unsetCreateType();
      } else {
        setCreateType((CreateType)value);
      }
      break;

    case STATUS_CODE:
      if (value == null) {
        unsetStatusCode();
      } else {
        setStatusCode((hust.software.elon.safety.common.domain.StatusCode)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case TASK_ID:
      return getTaskId();

    case OBJECT_ID:
      return getObjectId();

    case QUEUE_ID:
      return getQueueId();

    case CREATE_TYPE:
      return getCreateType();

    case STATUS_CODE:
      return getStatusCode();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case TASK_ID:
      return isSetTaskId();
    case OBJECT_ID:
      return isSetObjectId();
    case QUEUE_ID:
      return isSetQueueId();
    case CREATE_TYPE:
      return isSetCreateType();
    case STATUS_CODE:
      return isSetStatusCode();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof SendPeopleQueueResponse)
      return this.equals((SendPeopleQueueResponse)that);
    return false;
  }

  public boolean equals(SendPeopleQueueResponse that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_taskId = true;
    boolean that_present_taskId = true;
    if (this_present_taskId || that_present_taskId) {
      if (!(this_present_taskId && that_present_taskId))
        return false;
      if (this.taskId != that.taskId)
        return false;
    }

    boolean this_present_objectId = true;
    boolean that_present_objectId = true;
    if (this_present_objectId || that_present_objectId) {
      if (!(this_present_objectId && that_present_objectId))
        return false;
      if (this.objectId != that.objectId)
        return false;
    }

    boolean this_present_queueId = true;
    boolean that_present_queueId = true;
    if (this_present_queueId || that_present_queueId) {
      if (!(this_present_queueId && that_present_queueId))
        return false;
      if (this.queueId != that.queueId)
        return false;
    }

    boolean this_present_createType = true && this.isSetCreateType();
    boolean that_present_createType = true && that.isSetCreateType();
    if (this_present_createType || that_present_createType) {
      if (!(this_present_createType && that_present_createType))
        return false;
      if (!this.createType.equals(that.createType))
        return false;
    }

    boolean this_present_statusCode = true && this.isSetStatusCode();
    boolean that_present_statusCode = true && that.isSetStatusCode();
    if (this_present_statusCode || that_present_statusCode) {
      if (!(this_present_statusCode && that_present_statusCode))
        return false;
      if (!this.statusCode.equals(that.statusCode))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(taskId);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(objectId);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(queueId);

    hashCode = hashCode * 8191 + ((isSetCreateType()) ? 131071 : 524287);
    if (isSetCreateType())
      hashCode = hashCode * 8191 + createType.getValue();

    hashCode = hashCode * 8191 + ((isSetStatusCode()) ? 131071 : 524287);
    if (isSetStatusCode())
      hashCode = hashCode * 8191 + statusCode.getValue();

    return hashCode;
  }

  @Override
  public int compareTo(SendPeopleQueueResponse other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetTaskId(), other.isSetTaskId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTaskId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.taskId, other.taskId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetObjectId(), other.isSetObjectId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetObjectId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.objectId, other.objectId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetQueueId(), other.isSetQueueId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQueueId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.queueId, other.queueId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetCreateType(), other.isSetCreateType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createType, other.createType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetStatusCode(), other.isSetStatusCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatusCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.statusCode, other.statusCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("SendPeopleQueueResponse(");
    boolean first = true;

    sb.append("taskId:");
    sb.append(this.taskId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("objectId:");
    sb.append(this.objectId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("queueId:");
    sb.append(this.queueId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createType:");
    if (this.createType == null) {
      sb.append("null");
    } else {
      sb.append(this.createType);
    }
    first = false;
    if (isSetStatusCode()) {
      if (!first) sb.append(", ");
      sb.append("statusCode:");
      if (this.statusCode == null) {
        sb.append("null");
      } else {
        sb.append(this.statusCode);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // alas, we cannot check 'taskId' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'objectId' because it's a primitive and you chose the non-beans generator.
    // alas, we cannot check 'queueId' because it's a primitive and you chose the non-beans generator.
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SendPeopleQueueResponseStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SendPeopleQueueResponseStandardScheme getScheme() {
      return new SendPeopleQueueResponseStandardScheme();
    }
  }

  private static class SendPeopleQueueResponseStandardScheme extends org.apache.thrift.scheme.StandardScheme<SendPeopleQueueResponse> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SendPeopleQueueResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // TASK_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.taskId = iprot.readI64();
              struct.setTaskIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // OBJECT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.objectId = iprot.readI64();
              struct.setObjectIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // QUEUE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.queueId = iprot.readI64();
              struct.setQueueIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CREATE_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.createType = hust.software.elon.safety.people.domain.CreateType.findByValue(iprot.readI32());
              struct.setCreateTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 255: // STATUS_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.statusCode = hust.software.elon.safety.common.domain.StatusCode.findByValue(iprot.readI32());
              struct.setStatusCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetTaskId()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'taskId' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetObjectId()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'objectId' was not found in serialized data! Struct: " + toString());
      }
      if (!struct.isSetQueueId()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'queueId' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SendPeopleQueueResponse struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(TASK_ID_FIELD_DESC);
      oprot.writeI64(struct.taskId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(OBJECT_ID_FIELD_DESC);
      oprot.writeI64(struct.objectId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(QUEUE_ID_FIELD_DESC);
      oprot.writeI64(struct.queueId);
      oprot.writeFieldEnd();
      if (struct.createType != null) {
        oprot.writeFieldBegin(CREATE_TYPE_FIELD_DESC);
        oprot.writeI32(struct.createType.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.statusCode != null) {
        if (struct.isSetStatusCode()) {
          oprot.writeFieldBegin(STATUS_CODE_FIELD_DESC);
          oprot.writeI32(struct.statusCode.getValue());
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SendPeopleQueueResponseTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SendPeopleQueueResponseTupleScheme getScheme() {
      return new SendPeopleQueueResponseTupleScheme();
    }
  }

  private static class SendPeopleQueueResponseTupleScheme extends org.apache.thrift.scheme.TupleScheme<SendPeopleQueueResponse> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SendPeopleQueueResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeI64(struct.taskId);
      oprot.writeI64(struct.objectId);
      oprot.writeI64(struct.queueId);
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetCreateType()) {
        optionals.set(0);
      }
      if (struct.isSetStatusCode()) {
        optionals.set(1);
      }
      oprot.writeBitSet(optionals, 2);
      if (struct.isSetCreateType()) {
        oprot.writeI32(struct.createType.getValue());
      }
      if (struct.isSetStatusCode()) {
        oprot.writeI32(struct.statusCode.getValue());
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SendPeopleQueueResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.taskId = iprot.readI64();
      struct.setTaskIdIsSet(true);
      struct.objectId = iprot.readI64();
      struct.setObjectIdIsSet(true);
      struct.queueId = iprot.readI64();
      struct.setQueueIdIsSet(true);
      java.util.BitSet incoming = iprot.readBitSet(2);
      if (incoming.get(0)) {
        struct.createType = hust.software.elon.safety.people.domain.CreateType.findByValue(iprot.readI32());
        struct.setCreateTypeIsSet(true);
      }
      if (incoming.get(1)) {
        struct.statusCode = hust.software.elon.safety.common.domain.StatusCode.findByValue(iprot.readI32());
        struct.setStatusCodeIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

