/**
 * Autogenerated by Thrift Compiler (0.16.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package hust.software.elon.safety.dispose.domain;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.16.0)", date = "2022-05-11")
public class QueueCallbackRequest implements org.apache.thrift.TBase<QueueCallbackRequest, QueueCallbackRequest._Fields>, java.io.Serializable, Cloneable, Comparable<QueueCallbackRequest> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("QueueCallbackRequest");

  private static final org.apache.thrift.protocol.TField OBJECT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("objectId", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField OBJECT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("objectType", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField REVIEW_CALLBACK_FIELD_DESC = new org.apache.thrift.protocol.TField("reviewCallback", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField AUDIT_TAGS_FIELD_DESC = new org.apache.thrift.protocol.TField("auditTags", org.apache.thrift.protocol.TType.LIST, (short)4);
  private static final org.apache.thrift.protocol.TField QUEUE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("queueId", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField VIRTUAL_QUEUE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("virtualQueueId", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField AUDIT_RESULT_FIELD_DESC = new org.apache.thrift.protocol.TField("auditResult", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField AUDIT_RESULT_JSON_FIELD_DESC = new org.apache.thrift.protocol.TField("auditResultJson", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField EXTRA_JSON_FIELD_DESC = new org.apache.thrift.protocol.TField("extraJson", org.apache.thrift.protocol.TType.STRING, (short)9);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new QueueCallbackRequestStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new QueueCallbackRequestTupleSchemeFactory();

  public long objectId; // required
  /**
   * 
   * @see hust.software.elon.safety.common.domain.ObjectType
   */
  public @org.apache.thrift.annotation.Nullable hust.software.elon.safety.common.domain.ObjectType objectType; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String reviewCallback; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<java.lang.Long> auditTags; // required
  public long queueId; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String virtualQueueId; // required
  public int auditResult; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String auditResultJson; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String extraJson; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    OBJECT_ID((short)1, "objectId"),
    /**
     * 
     * @see hust.software.elon.safety.common.domain.ObjectType
     */
    OBJECT_TYPE((short)2, "objectType"),
    REVIEW_CALLBACK((short)3, "reviewCallback"),
    AUDIT_TAGS((short)4, "auditTags"),
    QUEUE_ID((short)5, "queueId"),
    VIRTUAL_QUEUE_ID((short)6, "virtualQueueId"),
    AUDIT_RESULT((short)7, "auditResult"),
    AUDIT_RESULT_JSON((short)8, "auditResultJson"),
    EXTRA_JSON((short)9, "extraJson");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // OBJECT_ID
          return OBJECT_ID;
        case 2: // OBJECT_TYPE
          return OBJECT_TYPE;
        case 3: // REVIEW_CALLBACK
          return REVIEW_CALLBACK;
        case 4: // AUDIT_TAGS
          return AUDIT_TAGS;
        case 5: // QUEUE_ID
          return QUEUE_ID;
        case 6: // VIRTUAL_QUEUE_ID
          return VIRTUAL_QUEUE_ID;
        case 7: // AUDIT_RESULT
          return AUDIT_RESULT;
        case 8: // AUDIT_RESULT_JSON
          return AUDIT_RESULT_JSON;
        case 9: // EXTRA_JSON
          return EXTRA_JSON;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __OBJECTID_ISSET_ID = 0;
  private static final int __QUEUEID_ISSET_ID = 1;
  private static final int __AUDITRESULT_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.OBJECT_ID, new org.apache.thrift.meta_data.FieldMetaData("objectId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.OBJECT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("objectType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, hust.software.elon.safety.common.domain.ObjectType.class)));
    tmpMap.put(_Fields.REVIEW_CALLBACK, new org.apache.thrift.meta_data.FieldMetaData("reviewCallback", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_TAGS, new org.apache.thrift.meta_data.FieldMetaData("auditTags", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    tmpMap.put(_Fields.QUEUE_ID, new org.apache.thrift.meta_data.FieldMetaData("queueId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.VIRTUAL_QUEUE_ID, new org.apache.thrift.meta_data.FieldMetaData("virtualQueueId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_RESULT, new org.apache.thrift.meta_data.FieldMetaData("auditResult", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.AUDIT_RESULT_JSON, new org.apache.thrift.meta_data.FieldMetaData("auditResultJson", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EXTRA_JSON, new org.apache.thrift.meta_data.FieldMetaData("extraJson", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(QueueCallbackRequest.class, metaDataMap);
  }

  public QueueCallbackRequest() {
  }

  public QueueCallbackRequest(
    long objectId,
    hust.software.elon.safety.common.domain.ObjectType objectType,
    java.lang.String reviewCallback,
    java.util.List<java.lang.Long> auditTags,
    long queueId,
    java.lang.String virtualQueueId,
    int auditResult,
    java.lang.String auditResultJson,
    java.lang.String extraJson)
  {
    this();
    this.objectId = objectId;
    setObjectIdIsSet(true);
    this.objectType = objectType;
    this.reviewCallback = reviewCallback;
    this.auditTags = auditTags;
    this.queueId = queueId;
    setQueueIdIsSet(true);
    this.virtualQueueId = virtualQueueId;
    this.auditResult = auditResult;
    setAuditResultIsSet(true);
    this.auditResultJson = auditResultJson;
    this.extraJson = extraJson;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public QueueCallbackRequest(QueueCallbackRequest other) {
    __isset_bitfield = other.__isset_bitfield;
    this.objectId = other.objectId;
    if (other.isSetObjectType()) {
      this.objectType = other.objectType;
    }
    if (other.isSetReviewCallback()) {
      this.reviewCallback = other.reviewCallback;
    }
    if (other.isSetAuditTags()) {
      java.util.List<java.lang.Long> __this__auditTags = new java.util.ArrayList<java.lang.Long>(other.auditTags);
      this.auditTags = __this__auditTags;
    }
    this.queueId = other.queueId;
    if (other.isSetVirtualQueueId()) {
      this.virtualQueueId = other.virtualQueueId;
    }
    this.auditResult = other.auditResult;
    if (other.isSetAuditResultJson()) {
      this.auditResultJson = other.auditResultJson;
    }
    if (other.isSetExtraJson()) {
      this.extraJson = other.extraJson;
    }
  }

  public QueueCallbackRequest deepCopy() {
    return new QueueCallbackRequest(this);
  }

  @Override
  public void clear() {
    setObjectIdIsSet(false);
    this.objectId = 0;
    this.objectType = null;
    this.reviewCallback = null;
    this.auditTags = null;
    setQueueIdIsSet(false);
    this.queueId = 0;
    this.virtualQueueId = null;
    setAuditResultIsSet(false);
    this.auditResult = 0;
    this.auditResultJson = null;
    this.extraJson = null;
  }

  public long getObjectId() {
    return this.objectId;
  }

  public QueueCallbackRequest setObjectId(long objectId) {
    this.objectId = objectId;
    setObjectIdIsSet(true);
    return this;
  }

  public void unsetObjectId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __OBJECTID_ISSET_ID);
  }

  /** Returns true if field objectId is set (has been assigned a value) and false otherwise */
  public boolean isSetObjectId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __OBJECTID_ISSET_ID);
  }

  public void setObjectIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __OBJECTID_ISSET_ID, value);
  }

  /**
   * 
   * @see hust.software.elon.safety.common.domain.ObjectType
   */
  @org.apache.thrift.annotation.Nullable
  public hust.software.elon.safety.common.domain.ObjectType getObjectType() {
    return this.objectType;
  }

  /**
   * 
   * @see hust.software.elon.safety.common.domain.ObjectType
   */
  public QueueCallbackRequest setObjectType(@org.apache.thrift.annotation.Nullable hust.software.elon.safety.common.domain.ObjectType objectType) {
    this.objectType = objectType;
    return this;
  }

  public void unsetObjectType() {
    this.objectType = null;
  }

  /** Returns true if field objectType is set (has been assigned a value) and false otherwise */
  public boolean isSetObjectType() {
    return this.objectType != null;
  }

  public void setObjectTypeIsSet(boolean value) {
    if (!value) {
      this.objectType = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getReviewCallback() {
    return this.reviewCallback;
  }

  public QueueCallbackRequest setReviewCallback(@org.apache.thrift.annotation.Nullable java.lang.String reviewCallback) {
    this.reviewCallback = reviewCallback;
    return this;
  }

  public void unsetReviewCallback() {
    this.reviewCallback = null;
  }

  /** Returns true if field reviewCallback is set (has been assigned a value) and false otherwise */
  public boolean isSetReviewCallback() {
    return this.reviewCallback != null;
  }

  public void setReviewCallbackIsSet(boolean value) {
    if (!value) {
      this.reviewCallback = null;
    }
  }

  public int getAuditTagsSize() {
    return (this.auditTags == null) ? 0 : this.auditTags.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.lang.Long> getAuditTagsIterator() {
    return (this.auditTags == null) ? null : this.auditTags.iterator();
  }

  public void addToAuditTags(long elem) {
    if (this.auditTags == null) {
      this.auditTags = new java.util.ArrayList<java.lang.Long>();
    }
    this.auditTags.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.lang.Long> getAuditTags() {
    return this.auditTags;
  }

  public QueueCallbackRequest setAuditTags(@org.apache.thrift.annotation.Nullable java.util.List<java.lang.Long> auditTags) {
    this.auditTags = auditTags;
    return this;
  }

  public void unsetAuditTags() {
    this.auditTags = null;
  }

  /** Returns true if field auditTags is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditTags() {
    return this.auditTags != null;
  }

  public void setAuditTagsIsSet(boolean value) {
    if (!value) {
      this.auditTags = null;
    }
  }

  public long getQueueId() {
    return this.queueId;
  }

  public QueueCallbackRequest setQueueId(long queueId) {
    this.queueId = queueId;
    setQueueIdIsSet(true);
    return this;
  }

  public void unsetQueueId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __QUEUEID_ISSET_ID);
  }

  /** Returns true if field queueId is set (has been assigned a value) and false otherwise */
  public boolean isSetQueueId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __QUEUEID_ISSET_ID);
  }

  public void setQueueIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __QUEUEID_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getVirtualQueueId() {
    return this.virtualQueueId;
  }

  public QueueCallbackRequest setVirtualQueueId(@org.apache.thrift.annotation.Nullable java.lang.String virtualQueueId) {
    this.virtualQueueId = virtualQueueId;
    return this;
  }

  public void unsetVirtualQueueId() {
    this.virtualQueueId = null;
  }

  /** Returns true if field virtualQueueId is set (has been assigned a value) and false otherwise */
  public boolean isSetVirtualQueueId() {
    return this.virtualQueueId != null;
  }

  public void setVirtualQueueIdIsSet(boolean value) {
    if (!value) {
      this.virtualQueueId = null;
    }
  }

  public int getAuditResult() {
    return this.auditResult;
  }

  public QueueCallbackRequest setAuditResult(int auditResult) {
    this.auditResult = auditResult;
    setAuditResultIsSet(true);
    return this;
  }

  public void unsetAuditResult() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __AUDITRESULT_ISSET_ID);
  }

  /** Returns true if field auditResult is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditResult() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __AUDITRESULT_ISSET_ID);
  }

  public void setAuditResultIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __AUDITRESULT_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getAuditResultJson() {
    return this.auditResultJson;
  }

  public QueueCallbackRequest setAuditResultJson(@org.apache.thrift.annotation.Nullable java.lang.String auditResultJson) {
    this.auditResultJson = auditResultJson;
    return this;
  }

  public void unsetAuditResultJson() {
    this.auditResultJson = null;
  }

  /** Returns true if field auditResultJson is set (has been assigned a value) and false otherwise */
  public boolean isSetAuditResultJson() {
    return this.auditResultJson != null;
  }

  public void setAuditResultJsonIsSet(boolean value) {
    if (!value) {
      this.auditResultJson = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getExtraJson() {
    return this.extraJson;
  }

  public QueueCallbackRequest setExtraJson(@org.apache.thrift.annotation.Nullable java.lang.String extraJson) {
    this.extraJson = extraJson;
    return this;
  }

  public void unsetExtraJson() {
    this.extraJson = null;
  }

  /** Returns true if field extraJson is set (has been assigned a value) and false otherwise */
  public boolean isSetExtraJson() {
    return this.extraJson != null;
  }

  public void setExtraJsonIsSet(boolean value) {
    if (!value) {
      this.extraJson = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case OBJECT_ID:
      if (value == null) {
        unsetObjectId();
      } else {
        setObjectId((java.lang.Long)value);
      }
      break;

    case OBJECT_TYPE:
      if (value == null) {
        unsetObjectType();
      } else {
        setObjectType((hust.software.elon.safety.common.domain.ObjectType)value);
      }
      break;

    case REVIEW_CALLBACK:
      if (value == null) {
        unsetReviewCallback();
      } else {
        setReviewCallback((java.lang.String)value);
      }
      break;

    case AUDIT_TAGS:
      if (value == null) {
        unsetAuditTags();
      } else {
        setAuditTags((java.util.List<java.lang.Long>)value);
      }
      break;

    case QUEUE_ID:
      if (value == null) {
        unsetQueueId();
      } else {
        setQueueId((java.lang.Long)value);
      }
      break;

    case VIRTUAL_QUEUE_ID:
      if (value == null) {
        unsetVirtualQueueId();
      } else {
        setVirtualQueueId((java.lang.String)value);
      }
      break;

    case AUDIT_RESULT:
      if (value == null) {
        unsetAuditResult();
      } else {
        setAuditResult((java.lang.Integer)value);
      }
      break;

    case AUDIT_RESULT_JSON:
      if (value == null) {
        unsetAuditResultJson();
      } else {
        setAuditResultJson((java.lang.String)value);
      }
      break;

    case EXTRA_JSON:
      if (value == null) {
        unsetExtraJson();
      } else {
        setExtraJson((java.lang.String)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case OBJECT_ID:
      return getObjectId();

    case OBJECT_TYPE:
      return getObjectType();

    case REVIEW_CALLBACK:
      return getReviewCallback();

    case AUDIT_TAGS:
      return getAuditTags();

    case QUEUE_ID:
      return getQueueId();

    case VIRTUAL_QUEUE_ID:
      return getVirtualQueueId();

    case AUDIT_RESULT:
      return getAuditResult();

    case AUDIT_RESULT_JSON:
      return getAuditResultJson();

    case EXTRA_JSON:
      return getExtraJson();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case OBJECT_ID:
      return isSetObjectId();
    case OBJECT_TYPE:
      return isSetObjectType();
    case REVIEW_CALLBACK:
      return isSetReviewCallback();
    case AUDIT_TAGS:
      return isSetAuditTags();
    case QUEUE_ID:
      return isSetQueueId();
    case VIRTUAL_QUEUE_ID:
      return isSetVirtualQueueId();
    case AUDIT_RESULT:
      return isSetAuditResult();
    case AUDIT_RESULT_JSON:
      return isSetAuditResultJson();
    case EXTRA_JSON:
      return isSetExtraJson();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof QueueCallbackRequest)
      return this.equals((QueueCallbackRequest)that);
    return false;
  }

  public boolean equals(QueueCallbackRequest that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_objectId = true;
    boolean that_present_objectId = true;
    if (this_present_objectId || that_present_objectId) {
      if (!(this_present_objectId && that_present_objectId))
        return false;
      if (this.objectId != that.objectId)
        return false;
    }

    boolean this_present_objectType = true && this.isSetObjectType();
    boolean that_present_objectType = true && that.isSetObjectType();
    if (this_present_objectType || that_present_objectType) {
      if (!(this_present_objectType && that_present_objectType))
        return false;
      if (!this.objectType.equals(that.objectType))
        return false;
    }

    boolean this_present_reviewCallback = true && this.isSetReviewCallback();
    boolean that_present_reviewCallback = true && that.isSetReviewCallback();
    if (this_present_reviewCallback || that_present_reviewCallback) {
      if (!(this_present_reviewCallback && that_present_reviewCallback))
        return false;
      if (!this.reviewCallback.equals(that.reviewCallback))
        return false;
    }

    boolean this_present_auditTags = true && this.isSetAuditTags();
    boolean that_present_auditTags = true && that.isSetAuditTags();
    if (this_present_auditTags || that_present_auditTags) {
      if (!(this_present_auditTags && that_present_auditTags))
        return false;
      if (!this.auditTags.equals(that.auditTags))
        return false;
    }

    boolean this_present_queueId = true;
    boolean that_present_queueId = true;
    if (this_present_queueId || that_present_queueId) {
      if (!(this_present_queueId && that_present_queueId))
        return false;
      if (this.queueId != that.queueId)
        return false;
    }

    boolean this_present_virtualQueueId = true && this.isSetVirtualQueueId();
    boolean that_present_virtualQueueId = true && that.isSetVirtualQueueId();
    if (this_present_virtualQueueId || that_present_virtualQueueId) {
      if (!(this_present_virtualQueueId && that_present_virtualQueueId))
        return false;
      if (!this.virtualQueueId.equals(that.virtualQueueId))
        return false;
    }

    boolean this_present_auditResult = true;
    boolean that_present_auditResult = true;
    if (this_present_auditResult || that_present_auditResult) {
      if (!(this_present_auditResult && that_present_auditResult))
        return false;
      if (this.auditResult != that.auditResult)
        return false;
    }

    boolean this_present_auditResultJson = true && this.isSetAuditResultJson();
    boolean that_present_auditResultJson = true && that.isSetAuditResultJson();
    if (this_present_auditResultJson || that_present_auditResultJson) {
      if (!(this_present_auditResultJson && that_present_auditResultJson))
        return false;
      if (!this.auditResultJson.equals(that.auditResultJson))
        return false;
    }

    boolean this_present_extraJson = true && this.isSetExtraJson();
    boolean that_present_extraJson = true && that.isSetExtraJson();
    if (this_present_extraJson || that_present_extraJson) {
      if (!(this_present_extraJson && that_present_extraJson))
        return false;
      if (!this.extraJson.equals(that.extraJson))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(objectId);

    hashCode = hashCode * 8191 + ((isSetObjectType()) ? 131071 : 524287);
    if (isSetObjectType())
      hashCode = hashCode * 8191 + objectType.getValue();

    hashCode = hashCode * 8191 + ((isSetReviewCallback()) ? 131071 : 524287);
    if (isSetReviewCallback())
      hashCode = hashCode * 8191 + reviewCallback.hashCode();

    hashCode = hashCode * 8191 + ((isSetAuditTags()) ? 131071 : 524287);
    if (isSetAuditTags())
      hashCode = hashCode * 8191 + auditTags.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(queueId);

    hashCode = hashCode * 8191 + ((isSetVirtualQueueId()) ? 131071 : 524287);
    if (isSetVirtualQueueId())
      hashCode = hashCode * 8191 + virtualQueueId.hashCode();

    hashCode = hashCode * 8191 + auditResult;

    hashCode = hashCode * 8191 + ((isSetAuditResultJson()) ? 131071 : 524287);
    if (isSetAuditResultJson())
      hashCode = hashCode * 8191 + auditResultJson.hashCode();

    hashCode = hashCode * 8191 + ((isSetExtraJson()) ? 131071 : 524287);
    if (isSetExtraJson())
      hashCode = hashCode * 8191 + extraJson.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(QueueCallbackRequest other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetObjectId(), other.isSetObjectId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetObjectId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.objectId, other.objectId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetObjectType(), other.isSetObjectType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetObjectType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.objectType, other.objectType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetReviewCallback(), other.isSetReviewCallback());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReviewCallback()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.reviewCallback, other.reviewCallback);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetAuditTags(), other.isSetAuditTags());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditTags()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditTags, other.auditTags);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetQueueId(), other.isSetQueueId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQueueId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.queueId, other.queueId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetVirtualQueueId(), other.isSetVirtualQueueId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVirtualQueueId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.virtualQueueId, other.virtualQueueId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetAuditResult(), other.isSetAuditResult());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditResult()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditResult, other.auditResult);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetAuditResultJson(), other.isSetAuditResultJson());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuditResultJson()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.auditResultJson, other.auditResultJson);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetExtraJson(), other.isSetExtraJson());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExtraJson()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.extraJson, other.extraJson);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("QueueCallbackRequest(");
    boolean first = true;

    sb.append("objectId:");
    sb.append(this.objectId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("objectType:");
    if (this.objectType == null) {
      sb.append("null");
    } else {
      sb.append(this.objectType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("reviewCallback:");
    if (this.reviewCallback == null) {
      sb.append("null");
    } else {
      sb.append(this.reviewCallback);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("auditTags:");
    if (this.auditTags == null) {
      sb.append("null");
    } else {
      sb.append(this.auditTags);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("queueId:");
    sb.append(this.queueId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("virtualQueueId:");
    if (this.virtualQueueId == null) {
      sb.append("null");
    } else {
      sb.append(this.virtualQueueId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("auditResult:");
    sb.append(this.auditResult);
    first = false;
    if (!first) sb.append(", ");
    sb.append("auditResultJson:");
    if (this.auditResultJson == null) {
      sb.append("null");
    } else {
      sb.append(this.auditResultJson);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("extraJson:");
    if (this.extraJson == null) {
      sb.append("null");
    } else {
      sb.append(this.extraJson);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // alas, we cannot check 'objectId' because it's a primitive and you chose the non-beans generator.
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class QueueCallbackRequestStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public QueueCallbackRequestStandardScheme getScheme() {
      return new QueueCallbackRequestStandardScheme();
    }
  }

  private static class QueueCallbackRequestStandardScheme extends org.apache.thrift.scheme.StandardScheme<QueueCallbackRequest> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, QueueCallbackRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // OBJECT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.objectId = iprot.readI64();
              struct.setObjectIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // OBJECT_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.objectType = hust.software.elon.safety.common.domain.ObjectType.findByValue(iprot.readI32());
              struct.setObjectTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // REVIEW_CALLBACK
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.reviewCallback = iprot.readString();
              struct.setReviewCallbackIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // AUDIT_TAGS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.auditTags = new java.util.ArrayList<java.lang.Long>(_list0.size);
                long _elem1;
                for (int _i2 = 0; _i2 < _list0.size; ++_i2)
                {
                  _elem1 = iprot.readI64();
                  struct.auditTags.add(_elem1);
                }
                iprot.readListEnd();
              }
              struct.setAuditTagsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // QUEUE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.queueId = iprot.readI64();
              struct.setQueueIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // VIRTUAL_QUEUE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.virtualQueueId = iprot.readString();
              struct.setVirtualQueueIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // AUDIT_RESULT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.auditResult = iprot.readI32();
              struct.setAuditResultIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // AUDIT_RESULT_JSON
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.auditResultJson = iprot.readString();
              struct.setAuditResultJsonIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // EXTRA_JSON
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.extraJson = iprot.readString();
              struct.setExtraJsonIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetObjectId()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'objectId' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, QueueCallbackRequest struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(OBJECT_ID_FIELD_DESC);
      oprot.writeI64(struct.objectId);
      oprot.writeFieldEnd();
      if (struct.objectType != null) {
        oprot.writeFieldBegin(OBJECT_TYPE_FIELD_DESC);
        oprot.writeI32(struct.objectType.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.reviewCallback != null) {
        oprot.writeFieldBegin(REVIEW_CALLBACK_FIELD_DESC);
        oprot.writeString(struct.reviewCallback);
        oprot.writeFieldEnd();
      }
      if (struct.auditTags != null) {
        oprot.writeFieldBegin(AUDIT_TAGS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I64, struct.auditTags.size()));
          for (long _iter3 : struct.auditTags)
          {
            oprot.writeI64(_iter3);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(QUEUE_ID_FIELD_DESC);
      oprot.writeI64(struct.queueId);
      oprot.writeFieldEnd();
      if (struct.virtualQueueId != null) {
        oprot.writeFieldBegin(VIRTUAL_QUEUE_ID_FIELD_DESC);
        oprot.writeString(struct.virtualQueueId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(AUDIT_RESULT_FIELD_DESC);
      oprot.writeI32(struct.auditResult);
      oprot.writeFieldEnd();
      if (struct.auditResultJson != null) {
        oprot.writeFieldBegin(AUDIT_RESULT_JSON_FIELD_DESC);
        oprot.writeString(struct.auditResultJson);
        oprot.writeFieldEnd();
      }
      if (struct.extraJson != null) {
        oprot.writeFieldBegin(EXTRA_JSON_FIELD_DESC);
        oprot.writeString(struct.extraJson);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class QueueCallbackRequestTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public QueueCallbackRequestTupleScheme getScheme() {
      return new QueueCallbackRequestTupleScheme();
    }
  }

  private static class QueueCallbackRequestTupleScheme extends org.apache.thrift.scheme.TupleScheme<QueueCallbackRequest> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, QueueCallbackRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeI64(struct.objectId);
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetObjectType()) {
        optionals.set(0);
      }
      if (struct.isSetReviewCallback()) {
        optionals.set(1);
      }
      if (struct.isSetAuditTags()) {
        optionals.set(2);
      }
      if (struct.isSetQueueId()) {
        optionals.set(3);
      }
      if (struct.isSetVirtualQueueId()) {
        optionals.set(4);
      }
      if (struct.isSetAuditResult()) {
        optionals.set(5);
      }
      if (struct.isSetAuditResultJson()) {
        optionals.set(6);
      }
      if (struct.isSetExtraJson()) {
        optionals.set(7);
      }
      oprot.writeBitSet(optionals, 8);
      if (struct.isSetObjectType()) {
        oprot.writeI32(struct.objectType.getValue());
      }
      if (struct.isSetReviewCallback()) {
        oprot.writeString(struct.reviewCallback);
      }
      if (struct.isSetAuditTags()) {
        {
          oprot.writeI32(struct.auditTags.size());
          for (long _iter4 : struct.auditTags)
          {
            oprot.writeI64(_iter4);
          }
        }
      }
      if (struct.isSetQueueId()) {
        oprot.writeI64(struct.queueId);
      }
      if (struct.isSetVirtualQueueId()) {
        oprot.writeString(struct.virtualQueueId);
      }
      if (struct.isSetAuditResult()) {
        oprot.writeI32(struct.auditResult);
      }
      if (struct.isSetAuditResultJson()) {
        oprot.writeString(struct.auditResultJson);
      }
      if (struct.isSetExtraJson()) {
        oprot.writeString(struct.extraJson);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, QueueCallbackRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.objectId = iprot.readI64();
      struct.setObjectIdIsSet(true);
      java.util.BitSet incoming = iprot.readBitSet(8);
      if (incoming.get(0)) {
        struct.objectType = hust.software.elon.safety.common.domain.ObjectType.findByValue(iprot.readI32());
        struct.setObjectTypeIsSet(true);
      }
      if (incoming.get(1)) {
        struct.reviewCallback = iprot.readString();
        struct.setReviewCallbackIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TList _list5 = iprot.readListBegin(org.apache.thrift.protocol.TType.I64);
          struct.auditTags = new java.util.ArrayList<java.lang.Long>(_list5.size);
          long _elem6;
          for (int _i7 = 0; _i7 < _list5.size; ++_i7)
          {
            _elem6 = iprot.readI64();
            struct.auditTags.add(_elem6);
          }
        }
        struct.setAuditTagsIsSet(true);
      }
      if (incoming.get(3)) {
        struct.queueId = iprot.readI64();
        struct.setQueueIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.virtualQueueId = iprot.readString();
        struct.setVirtualQueueIdIsSet(true);
      }
      if (incoming.get(5)) {
        struct.auditResult = iprot.readI32();
        struct.setAuditResultIsSet(true);
      }
      if (incoming.get(6)) {
        struct.auditResultJson = iprot.readString();
        struct.setAuditResultJsonIsSet(true);
      }
      if (incoming.get(7)) {
        struct.extraJson = iprot.readString();
        struct.setExtraJsonIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

