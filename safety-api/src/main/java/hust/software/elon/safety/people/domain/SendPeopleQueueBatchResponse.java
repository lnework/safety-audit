/**
 * Autogenerated by Thrift Compiler (0.16.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package hust.software.elon.safety.people.domain;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.16.0)", date = "2022-05-11")
public class SendPeopleQueueBatchResponse implements org.apache.thrift.TBase<SendPeopleQueueBatchResponse, SendPeopleQueueBatchResponse._Fields>, java.io.Serializable, Cloneable, Comparable<SendPeopleQueueBatchResponse> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SendPeopleQueueBatchResponse");

  private static final org.apache.thrift.protocol.TField SEND_SUCCESS_PEOPLE_QUEUE_RESPONSES_FIELD_DESC = new org.apache.thrift.protocol.TField("sendSuccessPeopleQueueResponses", org.apache.thrift.protocol.TType.LIST, (short)1);
  private static final org.apache.thrift.protocol.TField SEND_FAIL_PEOPLE_QUEUE_RESPONSES_FIELD_DESC = new org.apache.thrift.protocol.TField("sendFailPeopleQueueResponses", org.apache.thrift.protocol.TType.LIST, (short)2);
  private static final org.apache.thrift.protocol.TField ALL_SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("allSuccess", org.apache.thrift.protocol.TType.BOOL, (short)3);
  private static final org.apache.thrift.protocol.TField CONFIG_KEY_FIELD_DESC = new org.apache.thrift.protocol.TField("configKey", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField STATUS_CODE_FIELD_DESC = new org.apache.thrift.protocol.TField("statusCode", org.apache.thrift.protocol.TType.I32, (short)255);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SendPeopleQueueBatchResponseStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SendPeopleQueueBatchResponseTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.util.List<SendPeopleQueueResponse> sendSuccessPeopleQueueResponses; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<SendPeopleQueueResponse> sendFailPeopleQueueResponses; // required
  public boolean allSuccess; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String configKey; // required
  /**
   * 
   * @see hust.software.elon.safety.common.domain.StatusCode
   */
  public @org.apache.thrift.annotation.Nullable hust.software.elon.safety.common.domain.StatusCode statusCode; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    SEND_SUCCESS_PEOPLE_QUEUE_RESPONSES((short)1, "sendSuccessPeopleQueueResponses"),
    SEND_FAIL_PEOPLE_QUEUE_RESPONSES((short)2, "sendFailPeopleQueueResponses"),
    ALL_SUCCESS((short)3, "allSuccess"),
    CONFIG_KEY((short)4, "configKey"),
    /**
     * 
     * @see hust.software.elon.safety.common.domain.StatusCode
     */
    STATUS_CODE((short)255, "statusCode");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // SEND_SUCCESS_PEOPLE_QUEUE_RESPONSES
          return SEND_SUCCESS_PEOPLE_QUEUE_RESPONSES;
        case 2: // SEND_FAIL_PEOPLE_QUEUE_RESPONSES
          return SEND_FAIL_PEOPLE_QUEUE_RESPONSES;
        case 3: // ALL_SUCCESS
          return ALL_SUCCESS;
        case 4: // CONFIG_KEY
          return CONFIG_KEY;
        case 255: // STATUS_CODE
          return STATUS_CODE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ALLSUCCESS_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.STATUS_CODE};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.SEND_SUCCESS_PEOPLE_QUEUE_RESPONSES, new org.apache.thrift.meta_data.FieldMetaData("sendSuccessPeopleQueueResponses", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SendPeopleQueueResponse.class))));
    tmpMap.put(_Fields.SEND_FAIL_PEOPLE_QUEUE_RESPONSES, new org.apache.thrift.meta_data.FieldMetaData("sendFailPeopleQueueResponses", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SendPeopleQueueResponse.class))));
    tmpMap.put(_Fields.ALL_SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("allSuccess", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.CONFIG_KEY, new org.apache.thrift.meta_data.FieldMetaData("configKey", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STATUS_CODE, new org.apache.thrift.meta_data.FieldMetaData("statusCode", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, hust.software.elon.safety.common.domain.StatusCode.class)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SendPeopleQueueBatchResponse.class, metaDataMap);
  }

  public SendPeopleQueueBatchResponse() {
    this.statusCode = hust.software.elon.safety.common.domain.StatusCode.SUCCESS;

  }

  public SendPeopleQueueBatchResponse(
    java.util.List<SendPeopleQueueResponse> sendSuccessPeopleQueueResponses,
    java.util.List<SendPeopleQueueResponse> sendFailPeopleQueueResponses,
    boolean allSuccess,
    java.lang.String configKey)
  {
    this();
    this.sendSuccessPeopleQueueResponses = sendSuccessPeopleQueueResponses;
    this.sendFailPeopleQueueResponses = sendFailPeopleQueueResponses;
    this.allSuccess = allSuccess;
    setAllSuccessIsSet(true);
    this.configKey = configKey;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SendPeopleQueueBatchResponse(SendPeopleQueueBatchResponse other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetSendSuccessPeopleQueueResponses()) {
      java.util.List<SendPeopleQueueResponse> __this__sendSuccessPeopleQueueResponses = new java.util.ArrayList<SendPeopleQueueResponse>(other.sendSuccessPeopleQueueResponses.size());
      for (SendPeopleQueueResponse other_element : other.sendSuccessPeopleQueueResponses) {
        __this__sendSuccessPeopleQueueResponses.add(new SendPeopleQueueResponse(other_element));
      }
      this.sendSuccessPeopleQueueResponses = __this__sendSuccessPeopleQueueResponses;
    }
    if (other.isSetSendFailPeopleQueueResponses()) {
      java.util.List<SendPeopleQueueResponse> __this__sendFailPeopleQueueResponses = new java.util.ArrayList<SendPeopleQueueResponse>(other.sendFailPeopleQueueResponses.size());
      for (SendPeopleQueueResponse other_element : other.sendFailPeopleQueueResponses) {
        __this__sendFailPeopleQueueResponses.add(new SendPeopleQueueResponse(other_element));
      }
      this.sendFailPeopleQueueResponses = __this__sendFailPeopleQueueResponses;
    }
    this.allSuccess = other.allSuccess;
    if (other.isSetConfigKey()) {
      this.configKey = other.configKey;
    }
    if (other.isSetStatusCode()) {
      this.statusCode = other.statusCode;
    }
  }

  public SendPeopleQueueBatchResponse deepCopy() {
    return new SendPeopleQueueBatchResponse(this);
  }

  @Override
  public void clear() {
    this.sendSuccessPeopleQueueResponses = null;
    this.sendFailPeopleQueueResponses = null;
    setAllSuccessIsSet(false);
    this.allSuccess = false;
    this.configKey = null;
    this.statusCode = hust.software.elon.safety.common.domain.StatusCode.SUCCESS;

  }

  public int getSendSuccessPeopleQueueResponsesSize() {
    return (this.sendSuccessPeopleQueueResponses == null) ? 0 : this.sendSuccessPeopleQueueResponses.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<SendPeopleQueueResponse> getSendSuccessPeopleQueueResponsesIterator() {
    return (this.sendSuccessPeopleQueueResponses == null) ? null : this.sendSuccessPeopleQueueResponses.iterator();
  }

  public void addToSendSuccessPeopleQueueResponses(SendPeopleQueueResponse elem) {
    if (this.sendSuccessPeopleQueueResponses == null) {
      this.sendSuccessPeopleQueueResponses = new java.util.ArrayList<SendPeopleQueueResponse>();
    }
    this.sendSuccessPeopleQueueResponses.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<SendPeopleQueueResponse> getSendSuccessPeopleQueueResponses() {
    return this.sendSuccessPeopleQueueResponses;
  }

  public SendPeopleQueueBatchResponse setSendSuccessPeopleQueueResponses(@org.apache.thrift.annotation.Nullable java.util.List<SendPeopleQueueResponse> sendSuccessPeopleQueueResponses) {
    this.sendSuccessPeopleQueueResponses = sendSuccessPeopleQueueResponses;
    return this;
  }

  public void unsetSendSuccessPeopleQueueResponses() {
    this.sendSuccessPeopleQueueResponses = null;
  }

  /** Returns true if field sendSuccessPeopleQueueResponses is set (has been assigned a value) and false otherwise */
  public boolean isSetSendSuccessPeopleQueueResponses() {
    return this.sendSuccessPeopleQueueResponses != null;
  }

  public void setSendSuccessPeopleQueueResponsesIsSet(boolean value) {
    if (!value) {
      this.sendSuccessPeopleQueueResponses = null;
    }
  }

  public int getSendFailPeopleQueueResponsesSize() {
    return (this.sendFailPeopleQueueResponses == null) ? 0 : this.sendFailPeopleQueueResponses.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<SendPeopleQueueResponse> getSendFailPeopleQueueResponsesIterator() {
    return (this.sendFailPeopleQueueResponses == null) ? null : this.sendFailPeopleQueueResponses.iterator();
  }

  public void addToSendFailPeopleQueueResponses(SendPeopleQueueResponse elem) {
    if (this.sendFailPeopleQueueResponses == null) {
      this.sendFailPeopleQueueResponses = new java.util.ArrayList<SendPeopleQueueResponse>();
    }
    this.sendFailPeopleQueueResponses.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<SendPeopleQueueResponse> getSendFailPeopleQueueResponses() {
    return this.sendFailPeopleQueueResponses;
  }

  public SendPeopleQueueBatchResponse setSendFailPeopleQueueResponses(@org.apache.thrift.annotation.Nullable java.util.List<SendPeopleQueueResponse> sendFailPeopleQueueResponses) {
    this.sendFailPeopleQueueResponses = sendFailPeopleQueueResponses;
    return this;
  }

  public void unsetSendFailPeopleQueueResponses() {
    this.sendFailPeopleQueueResponses = null;
  }

  /** Returns true if field sendFailPeopleQueueResponses is set (has been assigned a value) and false otherwise */
  public boolean isSetSendFailPeopleQueueResponses() {
    return this.sendFailPeopleQueueResponses != null;
  }

  public void setSendFailPeopleQueueResponsesIsSet(boolean value) {
    if (!value) {
      this.sendFailPeopleQueueResponses = null;
    }
  }

  public boolean isAllSuccess() {
    return this.allSuccess;
  }

  public SendPeopleQueueBatchResponse setAllSuccess(boolean allSuccess) {
    this.allSuccess = allSuccess;
    setAllSuccessIsSet(true);
    return this;
  }

  public void unsetAllSuccess() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __ALLSUCCESS_ISSET_ID);
  }

  /** Returns true if field allSuccess is set (has been assigned a value) and false otherwise */
  public boolean isSetAllSuccess() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __ALLSUCCESS_ISSET_ID);
  }

  public void setAllSuccessIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __ALLSUCCESS_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getConfigKey() {
    return this.configKey;
  }

  public SendPeopleQueueBatchResponse setConfigKey(@org.apache.thrift.annotation.Nullable java.lang.String configKey) {
    this.configKey = configKey;
    return this;
  }

  public void unsetConfigKey() {
    this.configKey = null;
  }

  /** Returns true if field configKey is set (has been assigned a value) and false otherwise */
  public boolean isSetConfigKey() {
    return this.configKey != null;
  }

  public void setConfigKeyIsSet(boolean value) {
    if (!value) {
      this.configKey = null;
    }
  }

  /**
   * 
   * @see hust.software.elon.safety.common.domain.StatusCode
   */
  @org.apache.thrift.annotation.Nullable
  public hust.software.elon.safety.common.domain.StatusCode getStatusCode() {
    return this.statusCode;
  }

  /**
   * 
   * @see hust.software.elon.safety.common.domain.StatusCode
   */
  public SendPeopleQueueBatchResponse setStatusCode(@org.apache.thrift.annotation.Nullable hust.software.elon.safety.common.domain.StatusCode statusCode) {
    this.statusCode = statusCode;
    return this;
  }

  public void unsetStatusCode() {
    this.statusCode = null;
  }

  /** Returns true if field statusCode is set (has been assigned a value) and false otherwise */
  public boolean isSetStatusCode() {
    return this.statusCode != null;
  }

  public void setStatusCodeIsSet(boolean value) {
    if (!value) {
      this.statusCode = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case SEND_SUCCESS_PEOPLE_QUEUE_RESPONSES:
      if (value == null) {
        unsetSendSuccessPeopleQueueResponses();
      } else {
        setSendSuccessPeopleQueueResponses((java.util.List<SendPeopleQueueResponse>)value);
      }
      break;

    case SEND_FAIL_PEOPLE_QUEUE_RESPONSES:
      if (value == null) {
        unsetSendFailPeopleQueueResponses();
      } else {
        setSendFailPeopleQueueResponses((java.util.List<SendPeopleQueueResponse>)value);
      }
      break;

    case ALL_SUCCESS:
      if (value == null) {
        unsetAllSuccess();
      } else {
        setAllSuccess((java.lang.Boolean)value);
      }
      break;

    case CONFIG_KEY:
      if (value == null) {
        unsetConfigKey();
      } else {
        setConfigKey((java.lang.String)value);
      }
      break;

    case STATUS_CODE:
      if (value == null) {
        unsetStatusCode();
      } else {
        setStatusCode((hust.software.elon.safety.common.domain.StatusCode)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case SEND_SUCCESS_PEOPLE_QUEUE_RESPONSES:
      return getSendSuccessPeopleQueueResponses();

    case SEND_FAIL_PEOPLE_QUEUE_RESPONSES:
      return getSendFailPeopleQueueResponses();

    case ALL_SUCCESS:
      return isAllSuccess();

    case CONFIG_KEY:
      return getConfigKey();

    case STATUS_CODE:
      return getStatusCode();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case SEND_SUCCESS_PEOPLE_QUEUE_RESPONSES:
      return isSetSendSuccessPeopleQueueResponses();
    case SEND_FAIL_PEOPLE_QUEUE_RESPONSES:
      return isSetSendFailPeopleQueueResponses();
    case ALL_SUCCESS:
      return isSetAllSuccess();
    case CONFIG_KEY:
      return isSetConfigKey();
    case STATUS_CODE:
      return isSetStatusCode();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof SendPeopleQueueBatchResponse)
      return this.equals((SendPeopleQueueBatchResponse)that);
    return false;
  }

  public boolean equals(SendPeopleQueueBatchResponse that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_sendSuccessPeopleQueueResponses = true && this.isSetSendSuccessPeopleQueueResponses();
    boolean that_present_sendSuccessPeopleQueueResponses = true && that.isSetSendSuccessPeopleQueueResponses();
    if (this_present_sendSuccessPeopleQueueResponses || that_present_sendSuccessPeopleQueueResponses) {
      if (!(this_present_sendSuccessPeopleQueueResponses && that_present_sendSuccessPeopleQueueResponses))
        return false;
      if (!this.sendSuccessPeopleQueueResponses.equals(that.sendSuccessPeopleQueueResponses))
        return false;
    }

    boolean this_present_sendFailPeopleQueueResponses = true && this.isSetSendFailPeopleQueueResponses();
    boolean that_present_sendFailPeopleQueueResponses = true && that.isSetSendFailPeopleQueueResponses();
    if (this_present_sendFailPeopleQueueResponses || that_present_sendFailPeopleQueueResponses) {
      if (!(this_present_sendFailPeopleQueueResponses && that_present_sendFailPeopleQueueResponses))
        return false;
      if (!this.sendFailPeopleQueueResponses.equals(that.sendFailPeopleQueueResponses))
        return false;
    }

    boolean this_present_allSuccess = true;
    boolean that_present_allSuccess = true;
    if (this_present_allSuccess || that_present_allSuccess) {
      if (!(this_present_allSuccess && that_present_allSuccess))
        return false;
      if (this.allSuccess != that.allSuccess)
        return false;
    }

    boolean this_present_configKey = true && this.isSetConfigKey();
    boolean that_present_configKey = true && that.isSetConfigKey();
    if (this_present_configKey || that_present_configKey) {
      if (!(this_present_configKey && that_present_configKey))
        return false;
      if (!this.configKey.equals(that.configKey))
        return false;
    }

    boolean this_present_statusCode = true && this.isSetStatusCode();
    boolean that_present_statusCode = true && that.isSetStatusCode();
    if (this_present_statusCode || that_present_statusCode) {
      if (!(this_present_statusCode && that_present_statusCode))
        return false;
      if (!this.statusCode.equals(that.statusCode))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetSendSuccessPeopleQueueResponses()) ? 131071 : 524287);
    if (isSetSendSuccessPeopleQueueResponses())
      hashCode = hashCode * 8191 + sendSuccessPeopleQueueResponses.hashCode();

    hashCode = hashCode * 8191 + ((isSetSendFailPeopleQueueResponses()) ? 131071 : 524287);
    if (isSetSendFailPeopleQueueResponses())
      hashCode = hashCode * 8191 + sendFailPeopleQueueResponses.hashCode();

    hashCode = hashCode * 8191 + ((allSuccess) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSetConfigKey()) ? 131071 : 524287);
    if (isSetConfigKey())
      hashCode = hashCode * 8191 + configKey.hashCode();

    hashCode = hashCode * 8191 + ((isSetStatusCode()) ? 131071 : 524287);
    if (isSetStatusCode())
      hashCode = hashCode * 8191 + statusCode.getValue();

    return hashCode;
  }

  @Override
  public int compareTo(SendPeopleQueueBatchResponse other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetSendSuccessPeopleQueueResponses(), other.isSetSendSuccessPeopleQueueResponses());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSendSuccessPeopleQueueResponses()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sendSuccessPeopleQueueResponses, other.sendSuccessPeopleQueueResponses);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetSendFailPeopleQueueResponses(), other.isSetSendFailPeopleQueueResponses());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSendFailPeopleQueueResponses()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sendFailPeopleQueueResponses, other.sendFailPeopleQueueResponses);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetAllSuccess(), other.isSetAllSuccess());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAllSuccess()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.allSuccess, other.allSuccess);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetConfigKey(), other.isSetConfigKey());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetConfigKey()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.configKey, other.configKey);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetStatusCode(), other.isSetStatusCode());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatusCode()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.statusCode, other.statusCode);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("SendPeopleQueueBatchResponse(");
    boolean first = true;

    sb.append("sendSuccessPeopleQueueResponses:");
    if (this.sendSuccessPeopleQueueResponses == null) {
      sb.append("null");
    } else {
      sb.append(this.sendSuccessPeopleQueueResponses);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sendFailPeopleQueueResponses:");
    if (this.sendFailPeopleQueueResponses == null) {
      sb.append("null");
    } else {
      sb.append(this.sendFailPeopleQueueResponses);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("allSuccess:");
    sb.append(this.allSuccess);
    first = false;
    if (!first) sb.append(", ");
    sb.append("configKey:");
    if (this.configKey == null) {
      sb.append("null");
    } else {
      sb.append(this.configKey);
    }
    first = false;
    if (isSetStatusCode()) {
      if (!first) sb.append(", ");
      sb.append("statusCode:");
      if (this.statusCode == null) {
        sb.append("null");
      } else {
        sb.append(this.statusCode);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SendPeopleQueueBatchResponseStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SendPeopleQueueBatchResponseStandardScheme getScheme() {
      return new SendPeopleQueueBatchResponseStandardScheme();
    }
  }

  private static class SendPeopleQueueBatchResponseStandardScheme extends org.apache.thrift.scheme.StandardScheme<SendPeopleQueueBatchResponse> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SendPeopleQueueBatchResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // SEND_SUCCESS_PEOPLE_QUEUE_RESPONSES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list8 = iprot.readListBegin();
                struct.sendSuccessPeopleQueueResponses = new java.util.ArrayList<SendPeopleQueueResponse>(_list8.size);
                @org.apache.thrift.annotation.Nullable SendPeopleQueueResponse _elem9;
                for (int _i10 = 0; _i10 < _list8.size; ++_i10)
                {
                  _elem9 = new SendPeopleQueueResponse();
                  _elem9.read(iprot);
                  struct.sendSuccessPeopleQueueResponses.add(_elem9);
                }
                iprot.readListEnd();
              }
              struct.setSendSuccessPeopleQueueResponsesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // SEND_FAIL_PEOPLE_QUEUE_RESPONSES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list11 = iprot.readListBegin();
                struct.sendFailPeopleQueueResponses = new java.util.ArrayList<SendPeopleQueueResponse>(_list11.size);
                @org.apache.thrift.annotation.Nullable SendPeopleQueueResponse _elem12;
                for (int _i13 = 0; _i13 < _list11.size; ++_i13)
                {
                  _elem12 = new SendPeopleQueueResponse();
                  _elem12.read(iprot);
                  struct.sendFailPeopleQueueResponses.add(_elem12);
                }
                iprot.readListEnd();
              }
              struct.setSendFailPeopleQueueResponsesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ALL_SUCCESS
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.allSuccess = iprot.readBool();
              struct.setAllSuccessIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CONFIG_KEY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.configKey = iprot.readString();
              struct.setConfigKeyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 255: // STATUS_CODE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.statusCode = hust.software.elon.safety.common.domain.StatusCode.findByValue(iprot.readI32());
              struct.setStatusCodeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SendPeopleQueueBatchResponse struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.sendSuccessPeopleQueueResponses != null) {
        oprot.writeFieldBegin(SEND_SUCCESS_PEOPLE_QUEUE_RESPONSES_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.sendSuccessPeopleQueueResponses.size()));
          for (SendPeopleQueueResponse _iter14 : struct.sendSuccessPeopleQueueResponses)
          {
            _iter14.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.sendFailPeopleQueueResponses != null) {
        oprot.writeFieldBegin(SEND_FAIL_PEOPLE_QUEUE_RESPONSES_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.sendFailPeopleQueueResponses.size()));
          for (SendPeopleQueueResponse _iter15 : struct.sendFailPeopleQueueResponses)
          {
            _iter15.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(ALL_SUCCESS_FIELD_DESC);
      oprot.writeBool(struct.allSuccess);
      oprot.writeFieldEnd();
      if (struct.configKey != null) {
        oprot.writeFieldBegin(CONFIG_KEY_FIELD_DESC);
        oprot.writeString(struct.configKey);
        oprot.writeFieldEnd();
      }
      if (struct.statusCode != null) {
        if (struct.isSetStatusCode()) {
          oprot.writeFieldBegin(STATUS_CODE_FIELD_DESC);
          oprot.writeI32(struct.statusCode.getValue());
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SendPeopleQueueBatchResponseTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SendPeopleQueueBatchResponseTupleScheme getScheme() {
      return new SendPeopleQueueBatchResponseTupleScheme();
    }
  }

  private static class SendPeopleQueueBatchResponseTupleScheme extends org.apache.thrift.scheme.TupleScheme<SendPeopleQueueBatchResponse> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SendPeopleQueueBatchResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetSendSuccessPeopleQueueResponses()) {
        optionals.set(0);
      }
      if (struct.isSetSendFailPeopleQueueResponses()) {
        optionals.set(1);
      }
      if (struct.isSetAllSuccess()) {
        optionals.set(2);
      }
      if (struct.isSetConfigKey()) {
        optionals.set(3);
      }
      if (struct.isSetStatusCode()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetSendSuccessPeopleQueueResponses()) {
        {
          oprot.writeI32(struct.sendSuccessPeopleQueueResponses.size());
          for (SendPeopleQueueResponse _iter16 : struct.sendSuccessPeopleQueueResponses)
          {
            _iter16.write(oprot);
          }
        }
      }
      if (struct.isSetSendFailPeopleQueueResponses()) {
        {
          oprot.writeI32(struct.sendFailPeopleQueueResponses.size());
          for (SendPeopleQueueResponse _iter17 : struct.sendFailPeopleQueueResponses)
          {
            _iter17.write(oprot);
          }
        }
      }
      if (struct.isSetAllSuccess()) {
        oprot.writeBool(struct.allSuccess);
      }
      if (struct.isSetConfigKey()) {
        oprot.writeString(struct.configKey);
      }
      if (struct.isSetStatusCode()) {
        oprot.writeI32(struct.statusCode.getValue());
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SendPeopleQueueBatchResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TList _list18 = iprot.readListBegin(org.apache.thrift.protocol.TType.STRUCT);
          struct.sendSuccessPeopleQueueResponses = new java.util.ArrayList<SendPeopleQueueResponse>(_list18.size);
          @org.apache.thrift.annotation.Nullable SendPeopleQueueResponse _elem19;
          for (int _i20 = 0; _i20 < _list18.size; ++_i20)
          {
            _elem19 = new SendPeopleQueueResponse();
            _elem19.read(iprot);
            struct.sendSuccessPeopleQueueResponses.add(_elem19);
          }
        }
        struct.setSendSuccessPeopleQueueResponsesIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TList _list21 = iprot.readListBegin(org.apache.thrift.protocol.TType.STRUCT);
          struct.sendFailPeopleQueueResponses = new java.util.ArrayList<SendPeopleQueueResponse>(_list21.size);
          @org.apache.thrift.annotation.Nullable SendPeopleQueueResponse _elem22;
          for (int _i23 = 0; _i23 < _list21.size; ++_i23)
          {
            _elem22 = new SendPeopleQueueResponse();
            _elem22.read(iprot);
            struct.sendFailPeopleQueueResponses.add(_elem22);
          }
        }
        struct.setSendFailPeopleQueueResponsesIsSet(true);
      }
      if (incoming.get(2)) {
        struct.allSuccess = iprot.readBool();
        struct.setAllSuccessIsSet(true);
      }
      if (incoming.get(3)) {
        struct.configKey = iprot.readString();
        struct.setConfigKeyIsSet(true);
      }
      if (incoming.get(4)) {
        struct.statusCode = hust.software.elon.safety.common.domain.StatusCode.findByValue(iprot.readI32());
        struct.setStatusCodeIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

